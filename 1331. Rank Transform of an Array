#include <vector>
#include <unordered_map>
#include <algorithm>

class Solution {
public:
    std::vector<int> arrayRankTransform(std::vector<int>& arr) {
        std::vector<int> sortedArr = arr; // Copy of the original array
        std::sort(sortedArr.begin(), sortedArr.end()); // Sort the array
        
        // Map to store the rank of each unique element
        std::unordered_map<int, int> rankMap;
        int rank = 1;
        
        // Assign ranks to unique elements
        for (int num : sortedArr) {
            if (rankMap.find(num) == rankMap.end()) { // Only assign rank if it's not already assigned
                rankMap[num] = rank++;
            }
        }
        
        // Each element must be replaced in the original array with its rank
        for (int& num : arr) {
            num = rankMap[num];
        }
        
        return arr;
    }
};
